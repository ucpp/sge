### Common tasks

☐ Integrate the stb library for image loading.
☐ Develop a Texture class to manage texture resources.
✔ Implement basic model data loading. @done(24-12-28 20:02)
✔ Add a Mesh class to represent individual meshes. @done(24-12-28 19:59)
✔ Add a Model class to encapsulate multiple meshes. @done(24-12-28 20:00)
✔ Integrate model loading and rendering into the Renderer class. @done(24-12-28 20:02)
✔ Integrate the assimp library for meshes loading. @done(24-12-27 21:57)
✔ Add a Camera class to manage camera properties and view transformations. @done(24-12-27 18:46)
✔ Implement a CameraController class to handle camera input and movement. @done(24-12-27 18:46)
✔ Compute rendering adjustments based on the projection, view, and model matrices. @done(24-12-27 18:46)
✔ Add RenderTarget class implementation. @done(24-12-26 19:24)
✔ Add a ConstantBuffer class to manage constant buffer resources. @done(24-12-26 19:22)
✔ Implement a PipelineState class to encapsulate pipeline state creation and management. @done(24-12-26 19:21)
✔ Add a Shader class to handle shaders. @done(24-12-25 19:30)
✔ Create a RootSignature class to configure and manage the root signature. @done(24-12-26 19:19)
✔ Integrate ConstantBuffer, PipelineState, Shader, and RootSignature into the Renderer class. @done(24-12-26 19:25)
✔ Add a Fence class to manage synchronization. @done(24-12-25 18:11)
✔ Create a VertexBuffer class for managing vertex buffer resources. @done(24-12-25 18:12)
✔ Implement an IndexBuffer class to handle index buffer resources. @done(24-12-25 18:13)
✔ Implement the Timer class to manage time intervals. @done(24-12-24 21:34)
✔ Implement an event manager with the ability to subscribe, unsubscribe, and invoke events. @done(24-12-24 21:37)
✔ Implement the ViewportScissors class to manage viewport and scissor rect for rendering. @done(24-12-24 22:05)
✔ Implement the DescriptorHeap class to manage Direct3D descriptor heaps. @done(24-12-24 23:14)
✔ Set up the base for a rendering class. @done(24-12-24 21:39)
✔ Add a Device class to manage the D3D12 device and swap chain. @done(24-12-23 22:22)
✔ Add an Input class to handle keyboard and mouse input. @done(24-12-23 22:22)
✔ Implement the Singleton pattern for the Logger class. @done(24-12-23 22:22)
✔ Add a Window class with a WinAPI implementation for window creation. @done(24-12-23 22:22)
✔ Add a Logger class for logging to both file and console. @done(24-12-23 22:22)
✔ Add Verify functions for value and HRESULT validation. @done(24-12-23 22:22)
✔ Set up the basic CMake configuration and a minimal stub for the engine library. @done(24-12-23 22:22)

### Refactoring

✔ Make the Application class non-copyable and use unique_ptr for window management. @done(24-12-23 22:22)
✔ Change the naming of LogLevel enum values to follow the camel case style. @done(24-12-23 22:30)
☐ Extend Logger to support string formatting
☐ Refactor the ImGui functionality from the Renderer class into a separate Editor class.